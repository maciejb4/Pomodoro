{"version":3,"sources":["pomodoro/components/Timer/Timer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Timer","useState","timeValue","setTimeValue","time","setTime","isStarted","setIsStarted","useEffect","timer","setInterval","clearInterval","resetTimer","changeTimeValue","value","Navbar","bg","variant","Container","Brand","className","ButtonGroup","Button","onClick","Math","floor","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAIaA,EAAQ,WACjB,MAAiCC,mBAAS,MAA1C,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAuBF,mBAASC,GAAhC,mBAAOE,EAAP,KAAYC,EAAZ,KACA,EAAiCJ,oBAAS,GAA1C,mBAAOK,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,WACN,IAAMC,EAAQL,EAAO,GAAKE,GAAaI,aAAY,kBAAML,EAAQD,EAAK,KAAG,KACzE,OAAO,kBAAMO,cAAcF,MAC5B,CAACL,EAAME,IAEVE,qBAAU,WACNI,MACF,CAACV,IAEH,IAQMU,EAAa,WACfL,GAAa,GACbF,EAAQH,IAGNW,EAAkB,SAACC,GACrBX,EAAaW,IAGjB,OACI,gCACI,cAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAA1B,SACI,cAACC,EAAA,EAAD,UACI,cAACH,EAAA,EAAOI,MAAR,gCAGR,qBAAKC,UAAU,YAAf,SACI,sBAAKA,UAAU,iBAAf,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAQL,QAAQ,YAAYM,QAAS,kBAAMV,EAAgB,OAA3D,uBACA,cAACS,EAAA,EAAD,CAAQL,QAAQ,YAAYM,QAAS,kBAAMV,EAAgB,MAA3D,yBACA,cAACS,EAAA,EAAD,CAAQL,QAAQ,YAAYM,QAAS,kBAAMV,EAAgB,MAA3D,2BAEJ,qBAAKO,UAAU,QAAf,SACKI,KAAKC,MAAMrB,EAAO,IAAM,KAAOA,EAAO,GAAKA,EAAO,GAAK,QAE5D,sBAAKgB,UAAU,gBAAf,UACI,cAACE,EAAA,EAAD,CAAQL,QAAQ,OAAOM,QAnCxB,WACfhB,GAAa,IAkCG,mBACA,cAACe,EAAA,EAAD,CAAQL,QAAQ,OAAOM,QAhCzB,WACdhB,GAAa,IA+BG,mBACA,cAACe,EAAA,EAAD,CAAQL,QAAQ,OAAOM,QAASX,EAAhC,+BC7CTc,EAPH,WAEV,OACI,cAAC,EAAD,KCQSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.533a61cb.chunk.js","sourcesContent":["import { Button, ButtonGroup, Container, Navbar } from \"react-bootstrap\";\r\nimport {useEffect, useState} from \"react\";\r\nimport './Timer.css';\r\n\r\nexport const Timer = () => {\r\n    const [timeValue,setTimeValue] = useState(1500);\r\n    const [time,setTime] = useState(timeValue);\r\n    const [isStarted,setIsStarted] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const timer = time > 0 && isStarted && setInterval(() => setTime(time-1),1000);\r\n        return () => clearInterval(timer as NodeJS.Timeout);\r\n    }, [time, isStarted]);\r\n\r\n    useEffect(() => {\r\n        resetTimer();\r\n    },[timeValue])\r\n\r\n    const startTimer = () => {\r\n        setIsStarted(true);\r\n    }\r\n\r\n    const stopTimer = () => {\r\n        setIsStarted(false);\r\n    }\r\n\r\n    const resetTimer = () => {\r\n        setIsStarted(false);\r\n        setTime(timeValue);\r\n    }\r\n\r\n    const changeTimeValue = (value : number) => {\r\n        setTimeValue(value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Container>\r\n                    <Navbar.Brand>Pomodoro v2.0</Navbar.Brand>\r\n                </Container>\r\n            </Navbar>\r\n            <div className=\"container\">\r\n                <div className=\"center-element\">\r\n                    <ButtonGroup>\r\n                        <Button variant=\"secondary\" onClick={() => changeTimeValue(1500)}>Pomodorro</Button>\r\n                        <Button variant=\"secondary\" onClick={() => changeTimeValue(300)}>Short Break</Button>\r\n                        <Button variant=\"secondary\" onClick={() => changeTimeValue(900)}>Long Break</Button>\r\n                    </ButtonGroup>\r\n                    <div className=\"clock\">\r\n                        {Math.floor(time / 60) + \":\" + (time % 60 ? time % 60 : '00')}\r\n                    </div>\r\n                    <div className=\"timer-buttons\">\r\n                        <Button variant=\"dark\" onClick={startTimer}>Start</Button>\r\n                        <Button variant=\"dark\" onClick={stopTimer}>Pause</Button>\r\n                        <Button variant=\"dark\" onClick={resetTimer}>Reset</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport {Timer} from \"./pomodoro/components/Timer/Timer\";\n\nconst App = () => {\n\n  return (\n      <Timer/>\n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}